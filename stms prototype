// Pin definitions
const int LED_PIN = 8;
const int BUZZER_PIN = 7;
const int TRIG_PIN = 9;
const int ECHO_PIN = 10;
const int BUTTON_PIN = 2;

const int DIST_UPPER = 300; // cm
const int DIST_LOWER = 40;  // cm
bool alertMode = true;
int objectCount = 0;
bool objectPreviouslyCounted = false;

// Function to read distance safely
long readDistance() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long duration = pulseIn(ECHO_PIN, HIGH, 60000); // 60ms timeout
  if (duration == 0) return 999; // No echo, nothing detected
  long distance = duration * 0.034 / 2;
  return distance;
}

void blinkLEDOnce() {
  digitalWrite(LED_PIN, HIGH);
  delay(150);
  digitalWrite(LED_PIN, LOW);
}

void beepOnce() {
  digitalWrite(BUZZER_PIN, HIGH);
  delay(150);
  digitalWrite(BUZZER_PIN, LOW);
}

void checkButton() {
  static bool lastState = HIGH;
  bool currentState = digitalRead(BUTTON_PIN);
  if (lastState == HIGH && currentState == LOW) {
    alertMode = !alertMode;
    Serial.print("Alert Mode: ");
    Serial.println(alertMode ? "ON" : "OFF");
  }
  lastState = currentState;
}

void setup() {
  pinMode(LED_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(BUTTON_PIN, INPUT_PULLUP);
  Serial.begin(9600);
  Serial.println("Distance Counter System Ready");
}

void loop() {
  checkButton();
  if (!alertMode) return;

  long distance = readDistance();
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Object is in counting range
  if (distance <= DIST_UPPER && distance > DIST_LOWER) {
    if (!objectPreviouslyCounted) { // count once per appearance
      objectCount++;
      Serial.print("Object Detected! Count = ");
      Serial.println(objectCount);
      blinkLEDOnce();
      beepOnce();
      objectPreviouslyCounted = true;
    }
  }
  // Object too close, decrement
  else if (distance <= DIST_LOWER && distance > 0) {
    if (objectPreviouslyCounted) {
      objectCount--;
      if (objectCount < 0) objectCount = 0;
      Serial.print("Too Close! Count = ");
      Serial.println(objectCount);
      blinkLEDOnce();
      beepOnce();
      objectPreviouslyCounted = false;
    }
  } 
  else { // Object far away, reset
    objectPreviouslyCounted = false;
  }

  delay(1000); // measurement every 1 seconds
}
